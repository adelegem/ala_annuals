{"frames":[{"func":"animate(map_anime, nframes = num_month, duration = 6)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"animate.gganim(map_anime, nframes = num_month, duration = 6)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do.call(draw_frames, c(list(plot = plot, frames = frame_ind, \n    device = args$device, ref_frame = args$ref_frame), args$dev_args))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (plot, frames, device, ref_frame, ...) \n{\n    stream <- device == \"current\"\n    dims <- tryCatch(plot_dims(plot, ref_frame), error = function(e) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(plot$scene$plot_frame(plot, frames[i], widths = dims$widths, \n    heights = dims$heights), error = function(e) {\n    warning(conditionMessage(e), call. = FALSE)\n})","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"plot$scene$plot_frame(plot, frames[i], widths = dims$widths, \n    heights = dims$heights)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"plot_frame(..., self = self)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggplot_gtable(plot)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggplot_gtable.ggplot_built(plot)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"by_layer(function(l, d) l$draw_geom(d, layout), plot$layers, \n    data, \"converting geom to grob\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try_fetch(for (i in seq_along(data)) {\n    out[[i]] <- f(l = layers[[i]], d = data[[i]])\n}, error = function(cnd) {\n    cli::cli_abort(c(\"Problem while {step}.\", i = \"Error occurred in the {ordinal(i)} layer.\"),  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(withCallingHandlers(expr, condition = function(cnd) {\n    {\n        .__handler_frame__. <- TRUE\n        .__setup_frame__. <- frame ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, condition = function(cnd) {\n    {\n        .__handler_frame__. <- TRUE\n        .__setup_frame__. <- frame ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"f(l = layers[[i]], d = data[[i]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"l$draw_geom(d, layout)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"draw_geom(..., self = self)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"self$geom$draw_layer(data, self$computed_geom_params, layout, \n    layout$coord)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"draw_layer(..., self = self)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(data_panels, function(data) {\n    if (empty(data)) \n        return(zeroGrob())\n    panel_params <- layout$panel_params[[data$PANEL[1]]] ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"inject(self$draw_panel(data, panel_params, coord, !!!params))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"self$draw_panel(data, panel_params, coord, na.rm = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"draw_panel(..., self = self)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggname(\"geom_point\", pointsGrob(coords$x, coords$y, pch = coords$shape, \n    gp = gpar(col = alpha(coords$colour, coords$alpha), fill = alpha(coords$fill, \n        coords$alpha), fontsize = coords$size * .pt + stroke_size * \n        .stroke/2, lwd = coords$stroke * .stroke/2)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"grobName(grob, prefix)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"pointsGrob(coords$x, coords$y, pch = coords$shape, gp = gpar(col = alpha(coords$colour, \n    coords$alpha), fill = alpha(coords$fill, coords$alpha), fontsize = coords$size * \n    .pt + stroke_size * .stroke/2, lwd = coords$stroke * .stroke/2))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"grob(x = x, y = y, pch = pch, size = size, name = name, gp = gp, \n    vp = vp, cl = \"points\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"validGrob(g)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"validGrob.grob(g)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"validDetails(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error : Unknown colour name: raw\n"}